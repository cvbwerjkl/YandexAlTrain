/*

В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней клетке. 
За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). 
При проходе через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду берут также за первую и последнюю клетки его пути).
Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол. 

*/

#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>


int main() {
    int m, n;

    std::ifstream fin("input.txt");

    fin >> m >> n;
    std::vector<std::vector<int>> dp(m + 1, std::vector<int>(n + 1, 200000));
    
    for (int i = 1; i <= m; ++i) {
        for (int j = 1; j <= n; ++j) {
            fin >> dp[i][j];
        }   
    }

    for (int i = 1; i <= m; ++i) {
        for (int j = 1; j <= n; ++j) {
            if (i == 1 && j == 1) continue;

            else {
                dp[i][j] += std::min(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }

    std::cout << dp[m][n];

    return 0;
}